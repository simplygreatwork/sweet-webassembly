(module
	
	(import "./utility.watm")
	(memory (import "host" "memory") 1)
	
	(func $memory_bootstrap
		
		;; @ 0: after initialization, next memory pointer index is 24 + (4 * 65536)
		;; @ 4: after initialization, next memory handle index is 1
		;; @ 8: type of memory index handles array
		;; @ 12: length of memory index handles array (65536) (256 * 256)
		;; @ 16: width of memory index handles array (4 bytes)
		;; @ 20: first memory index handle points to this array structure (pointer)
		
		(i32.store (i32.const 0) (i32.const 262168))
		(i32.store (i32.const 4) (i32.const 1))
		(i32.store (i32.const 8) (typeof "array"))
		(i32.store (i32.const 12) (i32.const 65536))
		(i32.store (i32.const 16) (i32.const 4))
		(i32.store (i32.const 20) (i32.const 8))
	)
	
	(func $memory_allocate (param $size i32) (result i32)
		
		(local $result i32)
		(local $pointer i32)
		(local $handle i32)
		(set_local $pointer (call $memory_allocate_block (get_local $size)))
		(set_local $handle (call $memory_allocate_handle (get_local $pointer)))
		(if 
			(i32.eq (i32.const 0) (i32.const 1))
			(then (set_local $result (get_local $handle)))
			(else (set_local $result (get_local $pointer)))
		)
		(get_local $result)
	)
	
	(func $memory_allocate_block (param $size i32) (result i32)
		
		(local $result i32)
		(set_local $result (i32.load (i32.const 0)))
		(i32.store (i32.const 0) (i32.add (get_local $result) (get_local $size)))
		(get_local $result)
	)

	(func $memory_allocate_handle (param $pointer i32) (result i32)
		
		(local $handle i32)
		(if
			(i32.eq (i32.const 0) (i32.const 1))
			(then (set_local $handle (call $memory_allocate_handle_impl (get_local $pointer))))
		)
		(get_local $handle)
	)

	(func $memory_allocate_handle_impl (param $pointer i32) (result i32)
		
		(local $handle i32)
		(call $print_integer (get_local $pointer))
		(set_local $handle (i32.load (i32.const 4)))
		(i32.store (i32.const 4) (i32.add (get_local $handle) (i32.const 1)))
		(i32.store
			(i32.add
				(i32.const 8)
				(i32.add
					(i32.const 12)
					(i32.mul (get_local $handle) (i32.const 4))
				)
			)
			(get_local $pointer)
		)
		(get_local $handle)
	)
	
	(func $memory_store (param $address i32) (param $offset i32) (param $value i32)
		
		(if
			(i32.eq (i32.const 0) (i32.const 1))
			(then (set_local $address (call $memory_deference_handle (get_local $address))))
		)
		(i32.store (i32.add (get_local $address) (get_local $offset)) (get_local $value))
	)
	
	(func $memory_load (param $address i32) (param $offset i32) (result i32)
		
		(if
			(i32.eq (i32.const 0) (i32.const 1))
			(then (set_local $address (call $memory_deference_handle (get_local $address))))
		)
		(i32.load (i32.add (get_local $address) (get_local $offset)))
	)
	
	(func $memory_load8_u (param $address i32) (param $offset i32) (result i32)
		
		(if
			(i32.eq (i32.const 0) (i32.const 1))
			(then (set_local $address (call $memory_deference_handle (get_local $address))))
		)
		(i32.load8_u (i32.add (get_local $address) (get_local $offset)))
	)
	
	(func $memory_deference_handle (param $handle i32) (result i32)
		
		(if
			(i32.eq (i32.const 0) (i32.const 1))
			(then (set_local $handle (call $memory_deference_handle_impl (get_local $handle))))
		)
		(get_local $handle)
	)
	
	(func $memory_deference_handle_impl (param $handle i32) (result i32)
		
		(i32.load
			(i32.add
				(i32.const 8)
				(i32.add
					(i32.const 12)
					(i32.mul (get_local $handle) (i32.const 4))
				)
			)
		)
	)
	
	(func $memory_compact
		
	)

	(func $memory_sizeof (param $type i32) (result i32)
		
		(local $result i32)
		(set_local $result (i32.const -1))
		(if (i32.eq (get_local $type) (typeof "boolean")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "number")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "string")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "function")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "list")) (then (set_local $result (i32.const 16))))
		(if (i32.eq (get_local $type) (typeof "list_item")) (then (set_local $result (i32.const 16))))
		(if (i32.eq (get_local $type) (typeof "map")) (then (set_local $result (i32.const 12))))
		(if (i32.eq (get_local $type) (typeof "tree")) (then (set_local $result (i32.const 12))))
		(if (i32.eq (get_local $type) (typeof "tree_node")) (then (set_local $result (i32.const 20))))
		(if (i32.eq (get_local $type) (typeof "stream")) (then (set_local $result (i32.const 8))))
		(get_local $result)
	)

	(func $memory_deallocate (param $pointer i32) (param $size i32) (result i32)
		(i32.const 0)
	)
	
	(func $memory_copy (param $a i32) (param $b i32) (param $length i32)
		
		(local $i i32)
		(set_local $i (i32.const 0))
		(block (loop
			(i32.store
				(i32.add (get_local $b) (get_local $i))
				(i32.load (i32.add (get_local $a) (get_local $i)))
			)
			(set_local $i (i32.add (get_local $i) (i32.const 1)))
			(br_if 1 (i32.eq (get_local $i) (get_local $length)))
			(br 0)
		))
	)
)
