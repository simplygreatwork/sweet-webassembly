(module
	
	(import "./utility.watm")
	(import "./memory.watm")
	(import "./string.watm")
	(import "./number.watm")
	(import "./list.watm")
	(memory (import "host" "memory") 1)
	
	(func $assert_string_type (param $string i32)
		
		(if
			(i32.eq (i32.load (get_local $string)) (i32.const 1))
			(then (call $print_string (string "PASS")))
			(else (call $print_string (string "FAIL")))
		)
	)
	
	(func $assert_string_equals (param $string_a i32) (param $string_b i32)
		
		(call $print_string (get_local $string_a))
		(call $print_string (get_local $string_b))
		(if
			(call $string_equals (get_local $string_a) (get_local $string_b))
			(then (call $print_string (string "PASS")))
			(else (call $print_string (string "FAIL")))
		)
	)

	(func $assert_number_type (param $number i32)
		
		(if
			(i32.eq (i32.load (get_local $number)) (i32.const 2))
			(then (call $print_string (string "PASS")))
			(else (call $print_string (string "FAIL")))
		)
	)

	(func $assert_number_equals (param $number_a i32) (param $number_b i32)
		
		(if
			(call $number_equals (get_local $number_a) (get_local $number_b))
			(then (call $print_string (string "PASS")))
			(else (call $print_string (string "FAIL")))
		)
	)

	(func $assert_list_type (param $list i32)
		
		(if
			(i32.eq (i32.load (get_local $list)) (i32.const 10))
			(then (call $print_string (string "PASS")))
			(else (call $print_string (string "FAIL")))
		)
	)
	
	(func $assert_list_length (param $list i32) (param $length i32)
		
		(if
			(call $number_equals (call $list_length (get_local $list)) (get_local $length))
			(then (call $print_string (string "PASS")))
			(else (call $print_string (string "FAIL")))
		)
	)	
)
