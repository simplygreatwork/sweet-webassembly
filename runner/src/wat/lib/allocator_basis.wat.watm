(module
	
	(import "./utility.watm")
	(import "./memory.watm")
	(import "./string.watm")
	(memory (import "host" "memory") 1)
	
	(func $allocator_bytes (result i32)
		(i32.const 4)
	)
	
	(func $allocator_initialize
		
		(call $allocator_frame_total_set (i32.const 0))
		(call $allocator_frame_indice_set (i32.const -1))
		(call $allocator_grow)
	)
	
	(func $allocator_frame_total (result i32)
		(i32.load16_u (i32.const 20))
	)

	(func $allocator_frame_total_set (param $frame_total i32) 
		(i32.store16 (i32.const 20) (get_local $frame_total))
	)

	(func $allocator_frame_indice (result i32)
		(i32.load16_u (i32.const 22))
	)
	
	(func $allocator_frame_indice_set (param $frame_indice i32) 
		(i32.store16 (i32.const 22) (get_local $frame_indice))
	)

	(func $allocator_grow
		
		(local $indice i32)
		(local $frame i32)
		(call $allocator_frame_total_increment)
		(call $allocator_frame_indice_set (i32.sub (call $allocator_frame_total) (i32.const 1)))
		(set_local $indice (call $allocator_frame_indice))
		(set_local $frame (call $allocator_frame_by_indice (get_local $indice)))
		(call $frame_initialize (get_local $frame))
	)
	
	(func $allocator_allocate (param $type i32) (param $size i32) (result i32)
		
		(local $result i32)
		(local $total i32)
		(local $i i32)
		(local $frame_indice i32)
		(local $frame i32)
		(local $pointer i32)
		(set_local $i (i32.const 0))
		(set_local $total (call $allocator_frame_total))
		(block (loop
			(set_local $frame_indice (call $allocator_frame_indice))
			(set_local $frame (call $allocator_frame_by_indice (get_local $frame_indice)))
			(set_local $pointer (call $frame_allocate (get_local $frame) (get_local $type) (get_local $size)))
			(if (i32.ne (get_local $pointer) (i32.const 0)) (then
				(br 2)
			) (else
				(call $allocator_frame_next)
			))
			(set_local $i (i32.add (get_local $i) (i32.const 1)))
			(if (i32.eq (get_local $i) (get_local $total)) (then
				(call $allocator_grow)
				(set_local $total (call $allocator_frame_total))
			))
			(br 0)
		))
		(call $frame_local_to_global (get_local $frame) (get_local $pointer))
	)
	
	(func $allocator_frame_next
		
		(call $allocator_frame_indice_increment)
		(if (i32.eq
			(call $allocator_frame_indice)
			(call $allocator_frame_total)
		) (then
			(call $allocator_frame_indice_set (i32.const 0))
		))
	)
	
	(func $allocator_frame_indice_increment
		(call $allocator_frame_indice_set (i32.add (call $allocator_frame_indice) (i32.const 1)))
	)
	
	(func $allocator_frame_indice_decrement
		(call $allocator_frame_indice_set (i32.sub (call $allocator_frame_indice) (i32.const 1)))
	)
	
	(func $allocator_frame_total_increment
		(call $allocator_frame_total_set (i32.add (call $allocator_frame_total) (i32.const 1)))
	)

	(func $allocator_frame_total_decrement
		(call $allocator_frame_total_set (i32.sub (call $allocator_frame_total) (i32.const 1)))
	)
	
	(func $allocator_frames_offset (result i32)
		(i32.mul (i32.const 4) (call $frame_width))
	)
	
	(func $allocator_frame_by_indice (param $indice i32) (result i32)
		
		(i32.add
			(call $allocator_frames_offset)
			(i32.mul (get_local $indice) (call $frame_width))
		)
	)
	
	(func $allocator_frame_by_pointer (param $pointer i32) (result i32)

		(i32.add
			(call $allocator_frames_offset)
			(i32.mul (i32.div_u (get_local $pointer) (call $frame_width)) (call $frame_width))
		)
	)
	
	(func $allocator_deallocate (param $pointer i32)

		(local $frame i32)
		(set_local $frame (call $allocator_frame_by_pointer (get_local $pointer)))
		(call $frame_deallocate (get_local $frame) (get_local $pointer))
	)
	
	(func $frame_local_to_global (param $frame i32) (param $pointer i32) (result i32)
		(i32.add (get_local $frame) (get_local $pointer))
	)

	(func $frame_global_to_local (param $frame i32) (param $pointer i32) (result i32)
		(i32.sub (get_local $pointer) (get_local $frame))
	)

	(func $frame_width (result i32)
		(i32.const 65536)
	)

	(func $frame_width_usable (result i32)
		(i32.sub (call $frame_width) (call $frame_bytes_header))
	)

	(func $frame_bytes_header (result i32)
		(i32.const 16)
	)
	
	(func $frame_bytes_usable (result i32)
		(i32.sub (call $frame_width) (call $frame_bytes_header))
	)
	
	(func $frame_initialize (param $frame i32)
		
		(call $frame_cursor_allocate_set (get_local $frame) (call $frame_bytes_header))
		(call $frame_cursor_compact_set (get_local $frame) (call $frame_bytes_header))
		(call $frame_bytes_used_set (get_local $frame) (i32.const 0))
		(call $frame_hole_first_set (get_local $frame) (i32.const 0))
		(call $frame_hole_current_set (get_local $frame) (i32.const 0))
	)
	
	(func $frame_cursor_allocate (param $frame i32) (result i32)
		(i32.load16_u (i32.add (get_local $frame) (i32.const 0)))
	)
	
	(func $frame_cursor_allocate_set (param $frame i32) (param $cursor i32)
		(i32.store16 (i32.add (get_local $frame) (i32.const 0)) (get_local $cursor))
	)

	(func $frame_cursor_compact (param $frame i32) (result i32)
		(i32.load16_u (i32.add (get_local $frame) (i32.const 2)))
	)
	
	(func $frame_cursor_compact_set (param $frame i32) (param $cursor i32)
		(i32.store16 (i32.add (get_local $frame) (i32.const 2)) (get_local $cursor))
	)

	(func $frame_cursor_allocate_increment_by (param $frame i32) (param $bytes i32)
		(call $frame_cursor_allocate_set (get_local $frame) (i32.add (call $frame_cursor_allocate (get_local $frame)) (get_local $bytes)))
	)

	(func $frame_cursor_allocate_decrement_by (param $frame i32) (param $bytes i32)
		(call $frame_cursor_allocate_set (get_local $frame) (i32.sub (call $frame_cursor_allocate (get_local $frame)) (get_local $bytes)))
	)
	
	(func $frame_bytes_used (param $frame i32) (result i32)
		(i32.load16_u (i32.add (get_local $frame) (i32.const 4)))
	)
	
	(func $frame_bytes_used_set (param $frame i32) (param $bytes i32)
		(i32.store16 (i32.add (get_local $frame) (i32.const 4)) (get_local $bytes))
	)

	(func $frame_bytes_used_increment_by (param $frame i32) (param $bytes i32)
		(call $frame_bytes_used_set (get_local $frame) (i32.add (call $frame_bytes_used (get_local $frame)) (get_local $bytes)))
	)

	(func $frame_bytes_used_decrement_by (param $frame i32) (param $bytes i32)
		(call $frame_bytes_used_set (get_local $frame) (i32.sub (call $frame_bytes_used (get_local $frame)) (get_local $bytes)))
	)

	(func $frame_hole_first (param $frame i32) (result i32)
		(i32.load16_u (i32.add (get_local $frame) (i32.const 6)))
	)
	
	(func $frame_hole_first_set (param $frame i32) (param $hole i32)
		(i32.store16 (i32.add (get_local $frame) (i32.const 6)) (get_local $hole))
	)
	
	(func $frame_hole_current (param $frame i32) (result i32)
		(i32.load16_u (i32.add (get_local $frame) (i32.const 8)))
	)
	
	(func $frame_hole_current_set (param $frame i32) (param $hole i32)
		(i32.store16 (i32.add (get_local $frame) (i32.const 8)) (get_local $hole))
	)
	
	(func $frame_allocate (param $frame i32) (param $type i32) (param $size i32) (result i32)
		
		(local $result i32)
		(set_local $result (call $frame_allocate_using_cursor (get_local $frame) (get_local $type) (get_local $size)))
		(call $frame_bytes_used_increment_by (get_local $frame) (get_local $size))
		(get_local $result)
	)
	
	(func $frame_allocate_using_cursor (param $frame i32) (param $type i32) (param $size i32) (result i32)
		
		(local $pointer i32)
		(local $cursor i32)
		(local $cursor_next i32)
		(set_local $pointer (i32.const 0))
		(set_local $cursor (call $frame_cursor_allocate (get_local $frame)))
		(set_local $cursor_next (i32.add (get_local $cursor) (get_local $size)))
		(if
			(i32.le_u (get_local $cursor_next) (call $frame_width))
			(then
				(set_local $pointer (get_local $cursor))
				(call $frame_cursor_allocate_set (get_local $frame) (get_local $cursor_next))
			)
		)
		(get_local $pointer)
	)
	
	(func $frame_bytes_free (param $frame i32) (result i32)
		(i32.const 0)
	)
	
	(func $frame_deallocate (param $frame i32) (param $pointer i32)
		
		(local $size i32)
		(local $pointer_local i32)
		(set_local $size (call $frame_type_sizeof (get_local $frame) (get_local $pointer)))
		(set_local $pointer_local (call $frame_global_to_local (get_local $frame) (get_local $pointer)))
		(call $frame_bytes_used_decrement_by (get_local $frame) (get_local $size))
		(call $frame_allocate_hole (get_local $frame) (get_local $pointer) (get_local $size))
	)
	
	(func $frame_type_sizeof (param $frame i32) (param $pointer i32)	(result i32)		;; to implement
		
		;; string only
		(i32.add
			(i32.const 8)
			(i32.load (i32.add (get_local $pointer) (i32.const 8)))
		)
	)
	
	(func $frame_allocate_hole (param $frame i32) (param $pointer i32) (param $length i32)
		
		(local $hole i32)
		(local $hole_local i32)
		(local $hole_local_next i32)
		(set_local $hole (call $hole_initialize (get_local $pointer) (get_local $length)))
		(set_local $hole_local (call $frame_global_to_local (get_local $frame) (get_local $hole)))
		(set_local $hole_local_next (call $frame_hole_first (get_local $frame)))
		(call $frame_hole_first_set (get_local $frame) (get_local $hole_local))
		(call $hole_next_set (get_local $hole) (get_local $hole_local_next))
	)
	
	(func $frame_compact_next (param $frame i32)

		;; compact the first hole of the frame
		;; update the hole list to remove that hole
		(local $hole i32)
		(local $hole_next i32)
		(set_local $hole (call $frame_hole_first (get_local $frame)))
		(set_local $hole_next (call $hole_next (get_local $hole)))
	)

	(func $hole_bytes (result i32)
		(i32.const 8)
	)

	(func $hole_bytes_actual (param $hole i32) (result i32)
		(call $hole_length (get_local $hole))
	)

	(func $hole_initialize (param $pointer i32) (param $length i32) (result i32)
		
		(local $hole i32)
		(set_local $hole (get_local $pointer))
		(call $hole_type_set (get_local $hole) (typeof "hole"))
		(call $hole_length_set (get_local $hole) (get_local $length))
		(get_local $hole)
	)

	(func $hole_type (param $hole i32) (result i32)
		(i32.load16_u (i32.add (get_local $hole) (i32.const 0)))
	)
	
	(func $hole_type_set (param $hole i32) (param $type i32)
		(i32.store16 (i32.add (get_local $hole) (i32.const 0)) (get_local $type))
	)

	(func $hole_length (param $hole i32) (result i32)
		(i32.load16_u (i32.add (get_local $hole) (i32.const 2)))
	)
	
	(func $hole_length_set (param $hole i32) (param $length i32)
		(i32.store16 (i32.add (get_local $hole) (i32.const 2)) (get_local $length))
	)
	
	(func $hole_next (param $hole i32) (result i32)
		(i32.load16_u (i32.add (get_local $hole) (i32.const 4)))
	)

	(func $hole_next_set (param $hole i32) (param $next i32)
		(i32.store16 (i32.add (get_local $hole) (i32.const 4)) (get_local $next))		
	)
	
	(func $hole_skip (param $hole i32) (result i32)
		(i32.load16_u (i32.add (get_local $hole) (i32.const 6)))
	)

	(func $hole_skip_set (param $hole i32) (param $next i32)
		(i32.store16 (i32.add (get_local $hole) (i32.const 6)) (get_local $next))		
	)
)
