(module
	
	(import "./utility.watm")
	(import "./memory.watm")
	(import "./string.watm")
	(import "./types.watm")
	(memory (import "host" "memory") 1)
	
	(func $compactor_memory_size (result i32)
		(i32.const 0)
	)
	
	(func $compactor_new (result i32)
		
		(local $compactor i32)
		(set_local $compactor (call $memory_allocate (typeof "compactor") (call $compactor_memory_size)))
		(get_local $compactor)
	)
	
	(func $compactor_compact (param $compactor i32)
		
		(call $print_string (string "compactor_compact"))
		(call $compactor_walk)
	)
	
	(func $compactor_walk
		
		(call $print_string (string "compactor_walk"))
		(call $compactor_iterate)
	)
	
	(func $compactor_iterate																	;; work in process
		
		(local $boundary i32)
		(local $pointer i32)
		(local $type i32)
		(local $active i32)
		(set_local $boundary (call $memory_pointer_next))
		(set_local $pointer (call $memory_pointer_first))
		(block (loop
			(set_local $type (call $memory_type_by_pointer (get_local $pointer)))
			(set_local $active (call $memory_active_by_pointer (get_local $pointer)))
			(if (i32.eq (get_local $active) (i32.const 0)) (then 
				(call $print_string (string "+ was freed"))
			))
			(br_if 1 (i32.eq (get_local $type) (i32.const 0)))
			(br_if 1 (i32.ge_u (get_local $pointer) (get_local $boundary)))
			(call $print_string (call $type_strings_get (get_local $type)))
			(set_local $pointer (i32.add (get_local $pointer) (call $types_sizeof_record (get_local $pointer))))
			(br 0)
		))
	)
)
