(module
	
	(import "./utility.watm")
	(memory (import "host" "memory") 1)
	
	(func $memory_bootstrap_
		
		(i32.store (i32.const 0) (i32.const 262168))
		(i32.store (i32.const 4) (i32.const 1))
		(i32.store (i32.const 8) (typeof "array"))
		(i32.store (i32.const 12) (i32.const 65536))
		(i32.store (i32.const 16) (i32.const 4))
		(i32.store (i32.const 20) (i32.const 8))
	)
	
	(func $memory_allocate_ (param $size i32) (result i32)
		
		(local $pointer i32)
		(local $handle i32)
		(set_local $pointer (call $memory_allocate_block_ (get_local $size)))
		(set_local $handle (call $memory_allocate_handle_ (get_local $pointer)))
		(get_local $handle)
	)
	
	(func $memory_allocate_block_ (param $size i32) (result i32)
		
		(local $result i32)
		(set_local $result (i32.load (i32.const 0)))
		(i32.store (i32.const 0) (i32.add (get_local $result) (get_local $size)))
		(get_local $result)
	)
	
	(func $memory_allocate_handle_ (param $pointer i32) (result i32)
		
		(local $handle i32)
		(set_local $handle (i32.load (i32.const 4)))
		(i32.store (i32.const 4) (i32.add (get_local $handle) (i32.const 1)))
		(i32.store
			(i32.add
				(i32.const 8)
				(i32.add
					(i32.const 12)
					(i32.mul (get_local $handle) (i32.const 4))
				)
			)
			(get_local $pointer)
		)
		(get_local $handle)
	)
	
	(func $memory_store_ (param $address i32) (param $offset i32) (param $value i32)
		
		(set_local $address (call $memory_deference_handle_ (get_local $address)))
		(i32.store (i32.add (get_local $address) (get_local $offset)) (get_local $value))
	)
	
	(func $memory_load_ (param $address i32) (param $offset i32) (result i32)
		
		(set_local $address (call $memory_deference_handle_ (get_local $address)))
		(i32.load (i32.add (get_local $address) (get_local $offset)))
	)
	
	(func $memory_load8_u_ (param $address i32) (param $offset i32) (result i32)
		
		(set_local $address (call $memory_deference_handle_ (get_local $address)))
		(i32.load8_u (i32.add (get_local $address) (get_local $offset)))
	)
	
	(func $memory_deference_handle_ (param $handle i32) (result i32)
		(call $dereference_handle (get_local $handle))
	)
	
	(func $memory_compact_
		
	)

	(func $memory_sizeof_ (param $type i32) (result i32)
		
		(local $result i32)
		(set_local $result (i32.const -1))
		(if (i32.eq (get_local $type) (typeof "boolean")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "number")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "string")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "function")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "list")) (then (set_local $result (i32.const 16))))
		(if (i32.eq (get_local $type) (typeof "list_item")) (then (set_local $result (i32.const 16))))
		(if (i32.eq (get_local $type) (typeof "map")) (then (set_local $result (i32.const 12))))
		(if (i32.eq (get_local $type) (typeof "tree")) (then (set_local $result (i32.const 12))))
		(if (i32.eq (get_local $type) (typeof "tree_node")) (then (set_local $result (i32.const 20))))
		(if (i32.eq (get_local $type) (typeof "stream")) (then (set_local $result (i32.const 8))))
		(get_local $result)
	)
	
	(func $memory_deallocate_ (param $pointer i32) (param $size i32) (result i32)
		(i32.const 0)
	)
	
	(func $memory_copy_ (param $a i32) (param $b i32) (param $length i32)
		
		(local $i i32)
		(set_local $i (i32.const 0))
		(block (loop
			(i32.store
				(i32.add (get_local $b) (get_local $i))
				(i32.load (i32.add (get_local $a) (get_local $i)))
			)
			(set_local $i (i32.add (get_local $i) (i32.const 1)))
			(br_if 1 (i32.eq (get_local $i) (get_local $length)))
			(br 0)
		))
	)

	(func $array_new_ (param $length i32) (result i32)
		(call $array_new_width_ (get_local $length) (i32.const 4))
	)
	
	(func $array_new_width_ (param $length i32) (param $width i32) (result i32)
		
		(local $array i32)
		(set_local $array (call $memory_allocate_
			(i32.add (i32.const 12) (i32.mul (get_local $width) (get_local $length)))
		))
		(call $array_type_set_ (get_local $array))
		(call $array_length_set_ (get_local $array) (get_local $length))
		(call $array_width_set_ (get_local $array) (get_local $width))
		(get_local $array)
	)
	
	(func $array_type_set_ (param $array i32)
		(call $memory_store_ (get_local $array) (i32.const 0) (typeof "array"))
	)
	
	(func $array_length_ (param $array i32) (result i32)
		(call $memory_load_ (get_local $array) (i32.const 4))
	)
	
	(func $array_length_set_ (param $array i32) (param $length i32)
		(call $memory_store_ (get_local $array) (i32.const 4) (get_local $length))
	)
	
	(func $array_width_ (param $array i32) (result i32)
		(call $memory_load_ (get_local $array) (i32.const 8))
	)

	(func $array_width_set_ (param $array i32) (param $width i32)
		(call $memory_store_ (get_local $array) (i32.const 8) (get_local $width))
	)
	
	(func $array_value_get_ (param $array i32) (param $index i32) (result i32)
		
		(call $memory_load_
			(get_local $array)
			(i32.add (i32.const 12) (i32.mul (call $array_width_ (get_local $array)) (get_local $index)))
		)
	)
	
	(func $array_value_set_ (param $array i32) (param $index i32) (param $value i32)

		(call $memory_store_
			(get_local $array)
			(i32.add (i32.const 12) (i32.mul (call $array_width_ (get_local $array)) (get_local $index)))
			(get_local $value)
		)
	)

	(func $legend_new_ (result i32)
		
		(local $legend i32)
		(set_local $legend (call $memory_allocate_ (i32.const 20)))
		(call $legend_type_set_ (get_local $legend))
		(call $legend_base_set_ (get_local $legend) (i32.const 3))
		(call $legend_exponent_set_ (get_local $legend) (i32.const 4))
		(call $legend_counter_set_ (get_local $legend) (i32.const 0))
		(call $legend_array_set_ (get_local $legend) (call $legend_array_new_ (get_local $legend)))
		(get_local $legend)
	)
	
	(func $legend_type_set_ (param $legend i32)
		(call $memory_store_ (get_local $legend) (i32.const 0) (typeof "legend"))
	)

	(func $legend_base_ (param $legend i32) (result i32)
		(call $memory_load_ (get_local $legend) (i32.const 4))
	)
	
	(func $legend_base_set_ (param $legend i32) (param $base i32)
		(call $memory_store_ (get_local $legend) (i32.const 4) (get_local $base))
	)

	(func $legend_exponent_ (param $legend i32) (result i32)
		(call $memory_load_ (get_local $legend) (i32.const 8))
	)
	
	(func $legend_exponent_set_ (param $legend i32) (param $exponent i32)
		(call $memory_store_ (get_local $legend) (i32.const 8) (get_local $exponent))
	)

	(func $legend_counter_ (param $legend i32) (result i32)
		(call $memory_load_ (get_local $legend) (i32.const 12))
	)
	
	(func $legend_counter_set_ (param $legend i32) (param $counter i32)
		(call $memory_store_ (get_local $legend) (i32.const 12) (get_local $counter))
	)

	(func $legend_array_get_ (param $legend i32) (result i32)
		(call $memory_load_ (get_local $legend) (i32.const 16))
	)
	
	(func $legend_array_set_ (param $legend i32) (param $array i32)
		(call $memory_store_ (get_local $legend) (i32.const 16) (get_local $array))
	)

	(func $legend_array_new_ (param $legend i32) (result i32)
		
		(local $base i32)
		(local $array i32)
		(local $i i32)
		(set_local $base (call $legend_base_ (get_local $legend)))
		(set_local $array (call $array_new_ (get_local $base)))
		(set_local $i (i32.const 0))
		(block (loop
			(call $array_value_set_ (get_local $array) (get_local $i) (i32.const 0))
			(set_local $i (i32.add (get_local $i) (i32.const 1)))
			(br_if 1 (i32.eq (get_local $i) (get_local $base)))
			(br 0)
		))
		(get_local $array)
	)

	(func $legend_array_load_ (param $legend i32) (param $array i32) (param $index i32) (result i32)
		
		(local $result i32)
		(set_local $result (call $array_value_get_ (get_local $array) (get_local $index)))
		(if
			(i32.eq (get_local $result) (i32.const 0))
			(then
				(set_local $result (call $legend_array_new_ (get_local $legend)))
				(call $array_value_set_ (get_local $array) (get_local $index) (get_local $result))
			)
		)
		(get_local $result)
	)
	
	(func $legend_value_set_ (param $legend i32) (param $key i32) (param $value i32)
		
		(local $base i32)
		(local $exponent i32)
		(local $power i32)
		(local $array i32)
		(local $indice i32)
		(set_local $base (call $legend_base_ (get_local $legend)))
		(set_local $exponent (i32.sub (call $legend_exponent_ (get_local $legend)) (i32.const 1)))
		(set_local $array (call $legend_array_get_ (get_local $legend)))
		(block (loop
			(set_local $power (call $math_power (get_local $base) (get_local $exponent)))
			(set_local $indice (i32.div_u (get_local $key) (get_local $power)))
			(set_local $array (call $legend_array_load_ (get_local $legend) (get_local $array) (get_local $indice)))
			(set_local $key (i32.rem_u (get_local $key) (get_local $power)))
			(set_local $exponent (i32.sub (get_local $exponent) (i32.const 1)))
			(br_if 1 (i32.eq (get_local $exponent) (i32.const 0)))
			(br 0)
		))
		(call $array_value_set_ (get_local $array) (get_local $key) (get_local $value))
	)
	
	(func $legend_value_get_ (param $legend i32) (param $key i32) (result i32)
		
		(local $base i32)
		(local $exponent i32)
		(local $power i32)
		(local $array i32)
		(local $indice i32)
		(set_local $base (call $legend_base_ (get_local $legend)))
		(set_local $exponent (i32.sub (call $legend_exponent_ (get_local $legend)) (i32.const 1)))
		(set_local $array (call $legend_array_get_ (get_local $legend)))
		(block (loop
			(set_local $power (call $math_power (get_local $base) (get_local $exponent)))
			(set_local $indice (i32.div_u (get_local $key) (get_local $power)))
			(set_local $array (call $legend_array_load_ (get_local $legend) (get_local $array) (get_local $indice)))
			(set_local $key (i32.rem_u (get_local $key) (get_local $power)))
			(set_local $exponent (i32.sub (get_local $exponent) (i32.const 1)))
			(br_if 1 (i32.eq (get_local $exponent) (i32.const 0)))
			(br 0)
		))
		(call $array_value_get_ (get_local $array) (get_local $key))
	)
)
