(module
	
	(import "host" "print_string" (func $host_print_string (param i32)))
	(import "host" "print_integer" (func $host_print_integer (param i32)))
	(import "host" "table" (table 1 anyfunc))
	(memory (import "host" "memory") 1)
   (global $legend (import "host" "legend") (mut i32))
   (global $on_memory_allocate_block (import "host" "on_memory_allocate_block") (mut i32))
	(type $i32_i32_to_void (func (param i32) (param i32)))

	(func $memory_bootstrap_
		
		(i32.store (i32.const 0) (i32.const 8))
		(i32.store (i32.const 4) (i32.const 1))
		(set_global $legend (call $legend_new_))
	)
	
	(func $memory_allocate_ (param $type i32) (param $size i32) (result i32)
		
		(local $pointer i32)
		(local $handle i32)
		(set_local $pointer (call $memory_allocate_pointer_ (get_local $type) (get_local $size)))
		(set_local $handle (call $memory_allocate_handle_ (get_local $pointer)))
		(get_local $handle)
	)
	
	(func $memory_allocate_pointer_ (param $type i32) (param $size i32) (result i32)
		
		(local $result i32)
		(set_local $result (i32.load (i32.const 0)))
		(i32.store (i32.const 0) (i32.add (get_local $result) (get_local $size)))
		(i32.store (get_local $result) (get_local $type))
		(call $memory_allocate_block_emit_ (get_local $type) (get_local $size))
		(get_local $result)
	)

	(func $memory_allocate_block_on_ (param $function i32)
		(set_global $on_memory_allocate_block (get_local $function))
	)

	(func $memory_allocate_block_emit_ (param $type i32) (param $size i32)

		(local $function i32)
		(set_local $function (get_global $on_memory_allocate_block))
		(if
			(i32.ne (get_local $function) (i32.const 0))
			(then
				(call_indirect (type $i32_i32_to_void)
					(get_local $type) (get_local $size)
					(get_local $function)
				)
			)
		)
	)
	
	(func $memory_allocate_handle_ (param $pointer i32) (result i32)
		
		(local $handle i32)
		(set_local $handle (i32.load (i32.const 4)))
		(i32.store (i32.const 4) (i32.add (get_local $handle) (i32.const 1)))
		(call $legend_value_set_ (get_global $legend) (get_local $handle) (get_local $pointer))
		(get_local $handle)
	)
	
	(func $memory_store_ (param $address i32) (param $offset i32) (param $value i32)
		
		(set_local $address (call $memory_dereference_handle_ (get_local $address)))
		(i32.store (i32.add (get_local $address) (get_local $offset)) (get_local $value))
	)
	
	(func $memory_load_ (param $address i32) (param $offset i32) (result i32)
		
		(set_local $address (call $memory_dereference_handle_ (get_local $address)))
		(i32.load (i32.add (get_local $address) (get_local $offset)))
	)
	
	(func $memory_load8_u_ (param $address i32) (param $offset i32) (result i32)
		
		(set_local $address (call $memory_dereference_handle_ (get_local $address)))
		(i32.load8_u (i32.add (get_local $address) (get_local $offset)))
	)
	
	(func $memory_dereference_handle_ (param $handle i32) (result i32)
		(call $legend_value_get_ (get_global $legend) (get_local $handle))
	)
	
	(func $memory_free_ (param $address i32)
		
		(local $typeof i32)
		(local $sizeof i32)
		(set_local $typeof (call $memory_load_ (get_local $address) (i32.const 0)))
		(set_local $sizeof (call $memory_sizeof_ (typeof "string")))
		(call $memory_store_ (get_local $address) (i32.const 0) (typeof "void"))
		(call $memory_store_ (get_local $address) (i32.const 4) (get_local $typeof))
	)
	
	(func $memory_sizeof_ (param $address i32) (result i32)
		
		(local $result i32)
		(local $type i32)
		(set_local $result (i32.const -1))
		(set_local $type (i32.load (i32.add (get_local $address) (i32.const 0))))
		(if (i32.eq (get_local $type) (typeof "void")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "legend")) (then (set_local $result (i32.const 20))))
		(if (i32.eq (get_local $type) (typeof "handle_array")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "boolean")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "number")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "function")) (then (set_local $result (i32.const 8))))
		(if (i32.eq (get_local $type) (typeof "list")) (then (set_local $result (i32.const 16))))
		(if (i32.eq (get_local $type) (typeof "list_item")) (then (set_local $result (i32.const 16))))
		(if (i32.eq (get_local $type) (typeof "map")) (then (set_local $result (i32.const 12))))
		(if (i32.eq (get_local $type) (typeof "tree")) (then (set_local $result (i32.const 12))))
		(if (i32.eq (get_local $type) (typeof "tree_node")) (then (set_local $result (i32.const 20))))
		(if (i32.eq (get_local $type) (typeof "stream")) (then (set_local $result (i32.const 8))))
		(if
			(i32.eq (get_local $type) (typeof "string"))
			(then (set_local $result (i32.add
				(i32.const 8)
				(i32.load (i32.add (get_local $address) (i32.const 8)))
			)))
		)
		(if
			(i32.eq (get_local $type) (typeof "handle_array"))
			(then (set_local $result (i32.add
				(i32.const 16)
				(i32.mul
					(call $array_width_ (get_local $address))
					(call $array_length_ (get_local $address))
				)
			)))
		)
		(get_local $result)
	)
	
	(func $type_to_string_ (param $type i32) (result i32)
		
		(local $result i32)
		(set_local $result (string "missing"))
		(if (i32.eq (get_local $type) (typeof "void")) (then (set_local $result (string "void"))))
		(if (i32.eq (get_local $type) (typeof "legend")) (then (set_local $result (string "legend"))))
		(if (i32.eq (get_local $type) (typeof "handle_array")) (then (set_local $result (string "handle_array"))))
		(if (i32.eq (get_local $type) (typeof "boolean")) (then (set_local $result (string "boolean"))))
		(if (i32.eq (get_local $type) (typeof "number")) (then (set_local $result (string "number"))))
		(if (i32.eq (get_local $type) (typeof "function")) (then (set_local $result (string "function"))))
		(if (i32.eq (get_local $type) (typeof "list")) (then (set_local $result (string "list"))))
		(if (i32.eq (get_local $type) (typeof "list_item")) (then (set_local $result (string "list_item"))))
		(if (i32.eq (get_local $type) (typeof "map")) (then (set_local $result (string "map"))))
		(if (i32.eq (get_local $type) (typeof "tree")) (then (set_local $result (string "tree"))))
		(if (i32.eq (get_local $type) (typeof "tree_node")) (then (set_local $result (string "tree_node"))))
		(if (i32.eq (get_local $type) (typeof "stream")) (then (set_local $result (string "stream"))))
		(if (i32.eq (get_local $type) (typeof "string")) (then (set_local $result (string "string"))))
		(if (i32.eq (get_local $type) (typeof "handle_array")) (then (set_local $result (string "handle_array"))))
		(get_local $result)
	)
	
	(func $memory_deallocate_ (param $pointer i32) (param $size i32) (result i32)
		(i32.const 0)
	)
	
	(func $memory_copy_ (param $a i32) (param $b i32) (param $length i32)
		
		(local $i i32)
		(set_local $i (i32.const 0))
		(block (loop
			(i32.store
				(i32.add (get_local $b) (get_local $i))
				(i32.load (i32.add (get_local $a) (get_local $i)))
			)
			(set_local $i (i32.add (get_local $i) (i32.const 1)))
			(br_if 1 (i32.eq (get_local $i) (get_local $length)))
			(br 0)
		))
	)

	(func $array_new_ (param $length i32) (result i32)
		(call $array_new_width_ (get_local $length) (i32.const 4))
	)
	
	(func $array_new_width_ (param $length i32) (param $width i32) (result i32)
		
		(local $array i32)
		(set_local $array (call $memory_allocate_pointer_
			(typeof "handle_array")
			(i32.add (i32.const 16) (i32.mul (get_local $width) (get_local $length)))
		))
		(call $array_parent_set_ (get_local $array) (i32.const 0))
		(call $array_length_set_ (get_local $array) (get_local $length))
		(call $array_width_set_ (get_local $array) (get_local $width))
		(get_local $array)
	)
	
	(func $array_parent_ (param $array i32) (result i32)
		(i32.load (i32.add (get_local $array) (i32.const 4)))
	)
	
	(func $array_parent_set_ (param $array i32) (param $parent i32)
		(i32.store (i32.add (get_local $array) (i32.const 4)) (get_local $parent))
	)

	(func $array_length_ (param $array i32) (result i32)
		(i32.load (i32.add (get_local $array) (i32.const 8)))
	)
	
	(func $array_length_set_ (param $array i32) (param $length i32)
		(i32.store (i32.add (get_local $array) (i32.const 8)) (get_local $length))
	)
	
	(func $array_width_ (param $array i32) (result i32)
		(i32.load (i32.add (get_local $array) (i32.const 12)))
	)

	(func $array_width_set_ (param $array i32) (param $width i32)
		(i32.store (i32.add (get_local $array) (i32.const 12)) (get_local $width))
	)
	
	(func $array_value_get_ (param $array i32) (param $index i32) (result i32)

		(i32.load
			(i32.add
				(get_local $array)
				(i32.add 
					(i32.const 16)
					(i32.mul
						(call $array_width_ (get_local $array))
						(get_local $index)
					)
				)
			)
		)
	)
	
	(func $array_value_set_ (param $array i32) (param $index i32) (param $value i32)
		
		(i32.store
			(i32.add
				(get_local $array)
				(i32.add
					(i32.const 16)
					(i32.mul
						(call $array_width_ (get_local $array))
						(get_local $index)
					)
				)
			)
			(get_local $value)
		)
	)
	
	(func $legend_new_ (result i32)
		
		(local $legend i32)
		(set_local $legend (call $memory_allocate_pointer_ (typeof "legend") (i32.const 20)))
		(call $legend_base_set_ (get_local $legend) (i32.const 16))
		(call $legend_exponent_set_ (get_local $legend) (i32.const 4))
		(call $legend_counter_set_ (get_local $legend) (i32.const 0))
		(call $legend_array_set_ (get_local $legend) (call $legend_array_new_ (get_local $legend)))
		(get_local $legend)
	)
	
	(func $legend_base_ (param $legend i32) (result i32)
		(i32.load (i32.add (get_local $legend) (i32.const 4)))
	)
	
	(func $legend_base_set_ (param $legend i32) (param $base i32)
		(i32.store (i32.add (get_local $legend) (i32.const 4)) (get_local $base))
	)
	
	(func $legend_exponent_ (param $legend i32) (result i32)
		(i32.load (i32.add (get_local $legend) (i32.const 8)))
	)
	
	(func $legend_exponent_set_ (param $legend i32) (param $exponent i32)
		(i32.store (i32.add (get_local $legend) (i32.const 8)) (get_local $exponent))
	)

	(func $legend_counter_ (param $legend i32) (result i32)
		(i32.load (i32.add (get_local $legend) (i32.const 12)))
	)
	
	(func $legend_counter_set_ (param $legend i32) (param $counter i32)
		(i32.store (i32.add (get_local $legend) (i32.const 12)) (get_local $counter))
	)

	(func $legend_array_get_ (param $legend i32) (result i32)
		(i32.load (i32.add (get_local $legend) (i32.const 16)))
	)
	
	(func $legend_array_set_ (param $legend i32) (param $array i32)
		(i32.store (i32.add (get_local $legend) (i32.const 16)) (get_local $array))
	)
	
	(func $legend_array_new_ (param $legend i32) (result i32)
		
		(local $base i32)
		(local $array i32)
		(local $i i32)
		(set_local $base (call $legend_base_ (get_local $legend)))
		(set_local $array (call $array_new_ (get_local $base)))
		(set_local $i (i32.const 0))
		(block (loop
			(call $array_value_set_ (get_local $array) (get_local $i) (i32.const 0))
			(set_local $i (i32.add (get_local $i) (i32.const 1)))
			(br_if 1 (i32.eq (get_local $i) (get_local $base)))
			(br 0)
		))
		(get_local $array)
	)
	
	(func $legend_array_load_ (param $legend i32) (param $array i32) (param $index i32) (result i32)
		
		(local $result i32)
		(set_local $result (call $array_value_get_ (get_local $array) (get_local $index)))
		(if
			(i32.eq (get_local $result) (i32.const 0))
			(then
				(set_local $result (call $legend_array_new_ (get_local $legend)))
				(call $array_value_set_ (get_local $array) (get_local $index) (get_local $result))
			)
		)
		(get_local $result)
	)
	
	(func $legend_value_set_ (param $legend i32) (param $key i32) (param $value i32)
		
		(local $base i32)
		(local $exponent i32)
		(local $power i32)
		(local $array i32)
		(local $indice i32)
		(set_local $base (call $legend_base_ (get_local $legend)))
		(set_local $exponent (i32.sub (call $legend_exponent_ (get_local $legend)) (i32.const 1)))
		(set_local $array (call $legend_array_get_ (get_local $legend)))
		(block (loop
			(set_local $power (call $math_power_ (get_local $base) (get_local $exponent)))
			(set_local $indice (i32.div_u (get_local $key) (get_local $power)))
			(set_local $array (call $legend_array_load_ (get_local $legend) (get_local $array) (get_local $indice)))
			(set_local $key (i32.rem_u (get_local $key) (get_local $power)))
			(set_local $exponent (i32.sub (get_local $exponent) (i32.const 1)))
			(br_if 1 (i32.eq (get_local $exponent) (i32.const 0)))
			(br 0)
		))
		(call $array_value_set_ (get_local $array) (get_local $key) (get_local $value))
	)
	
	(func $legend_value_get_ (param $legend i32) (param $key i32) (result i32)
		
		(local $base i32)
		(local $exponent i32)
		(local $power i32)
		(local $array i32)
		(local $indice i32)
		(set_local $base (call $legend_base_ (get_local $legend)))
		(set_local $exponent (i32.sub (call $legend_exponent_ (get_local $legend)) (i32.const 1)))
		(set_local $array (call $legend_array_get_ (get_local $legend)))
		(block (loop
			(set_local $power (call $math_power_ (get_local $base) (get_local $exponent)))
			(set_local $indice (i32.div_u (get_local $key) (get_local $power)))
			(set_local $array (call $legend_array_load_ (get_local $legend) (get_local $array) (get_local $indice)))
			(set_local $key (i32.rem_u (get_local $key) (get_local $power)))
			(set_local $exponent (i32.sub (get_local $exponent) (i32.const 1)))
			(br_if 1 (i32.eq (get_local $exponent) (i32.const 0)))
			(br 0)
		))
		(call $array_value_get_ (get_local $array) (get_local $key))
	)
	
	(func $string_new (param $length i32) (result i32)
		
		(local $string i32)
		(set_local $string (call $memory_allocate_			;; verify sizing: e.g. 4, 8
			(typeof "string")
			(i32.add (i32.const 8) (get_local $length))
		))
		(call $string_length_set (get_local $string) (get_local $length))
		(get_local $string)
	)
	
	(func $string_length (param $string i32) (result i32)
		(call $memory_load_ (get_local $string) (i32.const 4))
	)
	
	(func $string_length_set (param $string i32) (param $length i32)
		(call $memory_store_ (get_local $string) (i32.const 4) (get_local $length))
	)
	
	(func $string_chars (param $string i32) (result i32)
		(i32.add (call $memory_dereference_handle_ (get_local $string)) (i32.const 8))
	)
	
	(func $string_set_char (param $string i32) (param $index i32) (param $value i32)
		
		(call $memory_store_
			(get_local $string)
			(i32.add (i32.const 8) (get_local $index))
			(get_local $value)
		)
	)
	
	(func $string_get_char (param $string i32) (param $index i32) (result i32)
		
		(call $memory_load8_u_
			(get_local $string)
			(i32.add (i32.const 8) (get_local $index))
		)
	)
	
	(func $print_string_ (param $string i32)
		(call $host_print_string (call $memory_dereference_handle_ (get_local $string)))
	)
	
	(func $print_integer_ (param $pointer i32)
		(call $host_print_integer (get_local $pointer))
	)
	
	(func $math_power_ (param $base i32) (param $exponent i32) (result i32)
		
		(local $result i32)
		(local $i i32)
		(set_local $result (i32.const 1))
		(set_local $i (i32.const 0))
		(block (loop
			(set_local $result (i32.mul (get_local $result) (get_local $base)))
			(set_local $i (i32.add (get_local $i) (i32.const 1)))
			(br_if 1 (i32.eq (get_local $i) (get_local $exponent)))
			(br 0)
		))
		(get_local $result)
	)
	
	(func $swap_test_ (param $reference_a i32) (param $reference_b i32)	;; need to use compilation phase
		
		(local $a i32)
		(local $b i32)
		(local $temp i32)
		(set_local $a (i32.const 1))
		(set_local $a (i32.const 2))
		(set_local $temp (get_local $a))
		(set_local $a (get_local $b))
		(set_local $b (get_local $temp))
	)
	
	(func $get_type_ (param $value i32) (result i32)
		;; (call $memory_load (get_local $value) (i32.const 0))
		(i32.load (get_local $value))
	)
)
